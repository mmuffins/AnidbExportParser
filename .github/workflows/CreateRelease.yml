name: Build Application

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - 'dependabot/**'
  pull_request:
    branches: 
      - main
      - 'dependabot/**'

jobs:
  build:
    runs-on: windows-latest
    env:
      Configuration: Release
      Framework: net7.0
      Runtime: win-x64
      
    steps:
    - uses: actions/checkout@v3
            
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.*
      
    - name: dotnet restore
      run: dotnet restore
      
    - name: dotnet publish
      run: dotnet publish "${{ github.workspace }}/ParserConsole/ParserConsole.csproj" --configuration ${{ env.Configuration }} -p:PublishSingleFile=true --self-contained true -p:PublishTrimmed=false -p:PublishReadyToRun=true --runtime ${{ env.Runtime }} --framework ${{ env.Framework }} --output "${{ github.workspace }}/publish"
      
    - name: dotnet test
      run: dotnet test AnidbExportParser.sln --configuration ${{ env.Configuration }} --framework ${{ env.Framework }} --verbosity normal --logger "trx;LogFileName=TestResults.trx"
              
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Application
        path: ${{ github.workspace }}\publish
      
    - name: Zip Files
      run: Compress-Archive -Path "${{ github.workspace }}\publish\*" -DestinationPath "${{ github.workspace }}\publish\AnidbExportParser.zip"
        
    - name: Create release
      uses: actions/github-script@v6
      if: ${{ github.event_name != 'pull_request'  && github.ref_name == 'main' }}
      id: create-release
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const {data: newRelease} = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: '${{ github.run_id }}',
            tag_name: '${{ github.run_id }}',
            generate_release_notes: true,
            draft: false,
            prerelease: false
          });
          console.log(`Release has been created with id ${newRelease.id}: ${newRelease.html_url}`)
          core.setOutput("url", newRelease.html_url)
          core.setOutput("id", newRelease.id)

    - name: Upload Release Assets
      uses: actions/github-script@v6
      if: ${{ github.event_name != 'pull_request'  && github.ref_name == 'main' }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs').promises
          const attachment = await fs.readFile("./publish/AnidbExportParser.zip")
          await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: '${{ steps.create-release.outputs.id }}',
            data: attachment,
            name: 'AnidbExportParser.zip'
          });
