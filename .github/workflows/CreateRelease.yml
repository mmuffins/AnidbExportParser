name: Build Application

on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:

env:
  version: "1.1.${{ github.run_number }}${{ github.run_attempt }}"

jobs:
  build:
    runs-on: windows-latest
    env:
      build_configuration: Release
      build_framework: net9.0
      build_runtime: win-x64
      
    steps:
    - uses: actions/checkout@v5
            
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.*
      
    - name: dotnet restore
      run: dotnet restore
      
    - name: dotnet publish
      run: dotnet publish "${{ github.workspace }}/ParserConsole/ParserConsole.csproj" --configuration ${{ env.build_configuration }} --runtime ${{ env.build_runtime }} --framework ${{ env.build_framework }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=false -p:PublishReadyToRun=true -p:Version=${{ env.version }} -p:PackageVersion=${{ env.version }} --output "${{ github.workspace }}/publish"
      
    - name: dotnet test
      run: dotnet test AnidbExportParser.sln --configuration ${{ env.build_configuration }} --framework ${{ env.build_framework }} --verbosity normal --logger "trx;LogFileName=TestResults.trx"
              
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: ${{ github.workspace }}/publish
      
  release:
    if: ${{ github.event_name != 'pull_request'  && github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    
    steps:
    - name: Get artifacts
      uses: actions/download-artifact@v5
      with:
        name: build
        path: ${{ github.workspace }}/publish
      
    - name: Zip Files
      run: |
        cd "${{ github.workspace }}/publish/" 
        zip -r "AnidbExportParser.zip" .
        
    - name: Create release
      uses: actions/github-script@v7
      id: create-release
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const {data: newRelease} = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'AniDb Export Parser ${{ env.version }}',
            tag_name: 'v${{ env.version }}',
            generate_release_notes: true,
            draft: false,
            prerelease: false
          });
          console.log(`Release has been created with id ${newRelease.id}: ${newRelease.html_url}`)
          core.setOutput("url", newRelease.html_url)
          core.setOutput("id", newRelease.id)

    - name: Upload Release Assets
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs').promises
          const attachment = await fs.readFile("./publish/AnidbExportParser.zip")
          await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: '${{ steps.create-release.outputs.id }}',
            data: attachment,
            name: 'AnidbExportParser.zip'
          });
